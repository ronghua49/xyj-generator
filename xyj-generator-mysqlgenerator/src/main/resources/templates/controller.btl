package ${table.controllerPackageName};

import java.util.List;

import org.omg.CORBA.SystemException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.xyjsoft.core.query.PageList;
import com.xyjsoft.core.query.QueryFilter;
import com.xyjsoft.core.http.HttpResult;
import com.xyjsoft.core.page.PageRequest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import ${table.modelPackageName}.${table.className};
import ${table.servicePackageName}.${table.className}Service;

/**
 * ---------------------------
 * ${table.description} (${table.className}Controller)         
 * ---------------------------
 * 作者：  xyjsoft
 * 时间：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * ---------------------------
 */
@RestController
@RequestMapping("${table.objectName}")
@Api(tags="${table.className}Controller ${table.description}")
public class ${table.className}Controller {

	@Autowired
	private ${table.className}Service ${table.objectName}Service;

	/**
	 * 保存${table.description}
	 * @param record
	 * @return
	 */	
	@PostMapping(value="/save")
	@ApiOperation(value = "新增,更新${table.description}数据", httpMethod = "POST", notes = "新增,更新${table.description}数据")
	public HttpResult save(@ApiParam(name="${table.className}",value="${table.description}业务对象") @RequestBody ${table.className} record) {
		return HttpResult.ok(${table.objectName}Service.save(record));
	}

    /**
     * 删除${table.description}
     * @param records
     * @return
     */
	@PostMapping(value="/delete")
	@ApiOperation(value = "删除${table.description}记录", httpMethod = "POST", notes = "删除${table.description}记录")
	public HttpResult delete(@ApiParam(name="${table.className}列表",value="${table.className}列表")@RequestBody List<Long> records) {
		return HttpResult.ok(${table.objectName}Service.deleteT(records));
	}

    /**
     * 基础分页查询
     * @param pageRequest
     * @return
     */    
	@PostMapping(value="/findPage")
	@ApiOperation(value="${table.description}数据列表", httpMethod = "POST", notes = "获取${table.description}列表")
	public HttpResult findPage(@ApiParam(name="PageRequest",value="查询对象")@RequestBody PageRequest pageRequest) {
		return HttpResult.ok(${table.objectName}Service.findPage(pageRequest));
	}
	
    /**
     * 根据主键查询
     * @param ${table.primaryKey.fieldName}
     * @return
     */ 	
	@GetMapping(value="/findById")
	@ApiOperation(value="${table.description}数据详情",httpMethod = "GET",notes = "${table.description}数据详情")
	public HttpResult findById(@ApiParam(name="${table.primaryKey.fieldName}",value="业务对象主键")@RequestParam ${table.primaryKey.javaType} ${table.primaryKey.fieldName}) {
		return HttpResult.ok(${table.objectName}Service.findById(${table.primaryKey.fieldName}));
	}
	
	/**
     * 查询
     * @param pageRequest
     * @return
     * @throws Exception 
     * @throws SystemException 
     */    
	@PostMapping(value="/query")
	@ApiOperation(value="query查询", httpMethod = "POST", notes = "query查询")
	public HttpResult query(@ApiParam(name="QueryFilter",value="查询对象")@RequestBody QueryFilter queryFilter) throws SystemException, Exception {
		PageList<${table.className}> query = ${table.objectName}Service.query(queryFilter);
		return HttpResult.ok(query);
	}
}
